<?php namespace Models;use Libs\CObject;class userPostRecordModel extends CObject{    static $table = "userPostRecord";     /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:新增一条记录     */    public function addOne() : array     {        assert(isset($this->userId) && is_numeric($this->userId) && $this->userId >= 0);        assert(isset($this->recruitId) && is_numeric($this->recruitId) && $this->recruitId >= 0);        assert(isset($this->addTime) && $this->addTime != '' );        assert(isset($this->status) && is_numeric($this->status) && $this->status >= 0);        assert(isset($this->reportCon) && $this->reportCon != '' );        $sql = "INSERT INTO ".self::$table." (`userId`,`recruitId`,`addTime`,`status`,`reportCon`) VALUES ( ?, ?, ?, ?, ?)";        $sqlParam = array(            $this->userId,            $this->recruitId,            $this->addTime,            $this->status,            $this->reportCon,);        return self::query($sql, $sqlParam, false);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:删除记录的方法，不进回收站，直接删数据库的记录     */    public function deleteOne() : array     {        $sql = "DELETE FROM ".self::$table." WHERE `id` = ?";        $sqlParam = array($this->id);        return self::query($sql, $sqlParam, false);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:根据userId不带分页获取所有的数据     */    public static function getAllByUseridWithOutLimit($userId) : array    {        $sql = " SELECT * from ".self::$table." WHERE userId = ? order by id desc ";        $sqlParam = array($userId);        return self::query($sql, $sqlParam, true);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:根据userId带分页获取所有的数据     */    public static function getAllByUseridWithLimit($userId, $limit) : array    {        assert($limit = "");        $sql = " SELECT * from ".self::$table." WHERE userId = ? order by id desc ".$limit;        $sqlParam = array($userId);        return self::query($sql, $sqlParam, true);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:根据userId获取一条数据     */    public static function getOneByUserid($userId) : array    {        $sql = " SELECT * from ".self::$table." WHERE userId = ?  order by id desc limit 0,1";        $sqlParam = array($userId);        return self::query($sql, $sqlParam, true);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:IN查询，根据userId获取不在回收站内的数据     */    public static function getAllUndeletedByUseridUseIn($userIdValues) : array    {        $sql = " SELECT * from ".self::$table." WHERE find_in_set(`userId`, '$userIdValues ') order by id desc";        $sqlParam = array();        return self::query($sql, $sqlParam, true);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:根据recruitId不带分页获取所有的数据     */    public static function getAllByRecruitidWithOutLimit($recruitId) : array    {        $sql = " SELECT * from ".self::$table." WHERE recruitId = ? order by id desc ";        $sqlParam = array($recruitId);        return self::query($sql, $sqlParam, true);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:根据recruitId带分页获取所有的数据     */    public static function getAllByRecruitidWithLimit($recruitId, $limit) : array    {        assert($limit = "");        $sql = " SELECT * from ".self::$table." WHERE recruitId = ? order by id desc ".$limit;        $sqlParam = array($recruitId);        return self::query($sql, $sqlParam, true);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:根据recruitId获取一条数据     */    public static function getOneByRecruitid($recruitId) : array    {        $sql = " SELECT * from ".self::$table." WHERE recruitId = ?  order by id desc limit 0,1";        $sqlParam = array($recruitId);        return self::query($sql, $sqlParam, true);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:IN查询，根据recruitId获取不在回收站内的数据     */    public static function getAllUndeletedByRecruitidUseIn($recruitIdValues) : array    {        $sql = " SELECT * from ".self::$table." WHERE find_in_set(`recruitId`, '$recruitIdValues ') order by id desc";        $sqlParam = array();        return self::query($sql, $sqlParam, true);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:根据status不带分页获取所有的数据     */    public static function getAllByStatusWithOutLimit($status) : array    {        $sql = " SELECT * from ".self::$table." WHERE status = ? order by id desc ";        $sqlParam = array($status);        return self::query($sql, $sqlParam, true);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:根据status带分页获取所有的数据     */    public static function getAllByStatusWithLimit($status, $limit) : array    {        assert($limit = "");        $sql = " SELECT * from ".self::$table." WHERE status = ? order by id desc ".$limit;        $sqlParam = array($status);        return self::query($sql, $sqlParam, true);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:根据$userId, $recruitId不带limit的获取所有的没被删除的数据     */    public static function getAllByUseridAndRecruitidWithOutLimit($userId, $recruitId) : array    {        assert(is_numeric($userId) && $userId > 0);        assert(is_numeric($recruitId) && $recruitId > 0);        $sql = "SELECT * FROM ".self::$table." WHERE userId = ? AND recruitId = ? order by id desc ";        $sqlParam = array($userId, $recruitId);        return self::query($sql, $sqlParam, true);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:根据$userId, $recruitId不带limit的获取所有的被删除的数据     */    public static function getAllByUseridAndRecruitidWithLimit($userId, $recruitId, $limit) : array    {        assert(is_numeric($userId) && $userId > 0);        assert(is_numeric($recruitId) && $recruitId > 0);        assert($limit != "");        $sql = "SELECT * FROM ".self::$table." WHERE userId = ? AND recruitId = ? order by id desc ".$limit;        $sqlParam = array($userId, $recruitId);        return self::query($sql, $sqlParam, true);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:根据$userId, $recruitId获取一条数据     */    public static function getOneByUseridAndRecruitid($userId, $recruitId) : array    {        assert(is_numeric($userId) && $userId > 0);        assert(is_numeric($recruitId) && $recruitId > 0);        $sql = "SELECT * FROM ".self::$table." WHERE userId = ? AND recruitId = ? order by id desc limit 0,1";        $sqlParam = array($userId, $recruitId);        return self::query($sql, $sqlParam, true);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:根据ID获取一条记录     */    public static function getOneById($id) : array    {        assert(is_numeric($id) && $id > 0);        $sql = "SELECT * FROM ".self::$table." WHERE `id` = ?";        $sqlParam = array($id);        return self::query($sql, $sqlParam, true);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:IN查询，根据ID获取所有的记录     */    public static function getAllByIdUseIn($ids) : array    {        assert($id != "");        $sql = "SELECT * FROM ".self::$table." WHERE find_in_set(`id`, '$ids')";        $sqlParam = array();        return self::query($sql, $sqlParam, true);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:根据ID获取一条记录     */    public static function getOneByIdForUpdate($id) : array    {        assert(is_numeric($id) && $id > 0);        $sql = "SELECT * FROM ".self::$table." WHERE `id` = ? FOR UPDATE";        $sqlParam = array($id);        return self::query($sql, $sqlParam, true);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:不带limit的获取所有的数据     */    public static function getAllWithOutLimit() : array    {        $sql = "SELECT * FROM ".self::$table." order by id desc ";        $sqlParam = array();        return self::query($sql, $sqlParam, true);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param $limit     * @return     * Function:带limit获取所有的记录     */    public static function getAllWithLimit($limit) : array    {        assert($limit != "");        $sql = "SELECT * from ".self::$table." order by id desc ".$limit;        $sqlParam = array();        return self::query($sql, $sqlParam, true);    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:编辑一条记录     */    public function editOne() : array    {        assert(isset($this->userId) && is_numeric($this->userId) && $this->userId >= 0);        assert(isset($this->recruitId) && is_numeric($this->recruitId) && $this->recruitId >= 0);        assert(isset($this->status) && is_numeric($this->status) && $this->status >= 0);        assert(isset($this->reportCon) && $this->reportCon != '' );        $sql = "UPDATE ".self::$table." SET `userId` = ?,`recruitId` = ?,`status` = ?,`reportCon` = ? WHERE `id` = ? ";        $sqlParam = array(            $this->userId,            $this->recruitId,            $this->status,            $this->reportCon,            $this->id        );        return self::query($sql, $sqlParam, false);    }}