<?phpuse Models\articleModel;class articleModelTest extends PHPUnit_Framework_TestCase {    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:测试新增一条记录     */    public function testaddOne()    {        $model = new articleModel();        $model->articleCatId = 10;        $model->title = "xxxx";        $model->desc = "xxxx";        $model->indexImg = "xxxx";        $model->content = "xxxx";        $model->addTime = "2019-02-12";        $model->sort = 10;        $model->isDeleted = 0;        $res = $model->addOne();        var_dump($res);        #./vendor/bin/phpunit --filter testaddOne ./test/articleModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:测试删除记录的方法，不进回收站，直接删数据库的记录     */    public function testdeleteOne()    {        $record = articleModel::getOneById(10);        if(empty($record)){            echo "搜索无数据";            exit;        }        $record = $record[0];        $res = $record->deleteOne();        var_dump($res);        #./vendor/bin/phpunit --filter testdeleteOne ./test/articleModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:获取一条不在回收站内的数据     */    public function testgetOneUndeletedByArticlecatid()    {        $record = articleModel::getOneUndeletedByArticlecatid(10);        var_dump($record);        #./vendor/bin/phpunit --filter testgetOneUndeletedByArticlecatid ./test/articleModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:获取一条在回收站内的数据     */    public function testgetOneDeletedByArticlecatid()    {        $record = articleModel::getOneDeletedByArticlecatid(10);        var_dump($record);        #./vendor/bin/phpunit --filter testgetOneDeletedByArticlecatid ./test/articleModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:IN查询， 获取一条不在回收站内的数据     */    public function testgetAllUndeletedByArticlecatidUseIn()    {        $record = articleModel::getAllUndeletedByArticlecatidUseIn('1,2,3,4');        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllUndeletedByArticlecatidUseIn ./test/articleModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:测试不带分页获取所有的不在回收站内的数据     */    public function testgetAllUndeletedByArticlecatidWithOutLimit()    {        $record = articleModel::getAllUndeletedByArticlecatidWithOutLimit(10);        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllUndeletedByArticlecatidWithOutLimit ./test/articleModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:测试带分页获取所有的不在回收站内的数据     */    public function testgetAllUndeletedByArticlecatidWithLimit()    {        $record = articleModel::getAllUndeletedByArticlecatidWithLimit(10, "limit 0,1");        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllUndeletedByArticlecatidWithLimit ./test/articleModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:测试带分页获取所有的不在回收站内的数据     */    public function testgetAllDeletedByArticlecatidWithOutLimit()    {        $record = articleModel::getAllDeletedByArticlecatidWithOutLimit(10);        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllDeletedByArticlecatidWithOutLimit ./test/articleModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:测试带分页获取所有的不在回收站内的数据     */    public function testgetAllDeletedByArticlecatidWithLimit()    {        $record = articleModel::getAllDeletedByArticlecatidWithLimit(10, "limit 0,1");        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllDeletedByArticlecatidWithLimit ./test/articleModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:根据ID获取一条记录     */    public function testgetOneById()    {        $record = articleModel::getOneById(1);        var_dump($record);        #./vendor/bin/phpunit --filter testgetOneById ./test/articleModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:IN查询，根据ID获取一条记录     */    public function testgetAllUndeletedByIdUseIn()    {        $record = articleModel::getAllUndeletedByIdUseIn('1,2,3,4');        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllUndeletedByIdUseIn ./test/articleModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:根据ID获取一条记录     */    public function testgetOneByIdForUpdate()    {        $record = articleModel::getOneByIdForUpdate(1);        var_dump($record);        #./vendor/bin/phpunit --filter testgetOneByIdForUpdate ./test/articleModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:删除记录的方法，进回收站，不是直接删数据库的记录     */    public function testdeleteUpdateOne()    {        $record = articleModel::getOneById(1);        if(empty($record)){            echo "搜索无数据";            exit;        }        $record = $record[0];        $res= $record->deleteUpdateOne();        var_dump($res);        #./vendor/bin/phpunit --filter testdeleteUpdateOne ./test/articleModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:编辑排序功能     */    public function testeditOneSort()    {        $record = articleModel::getOneById(1);        if(empty($record)){            echo "搜索无数据";            exit;        }        $record = $record[0];        $record->sort = 10;        $res= $record->editOneSort();        var_dump($res);        #./vendor/bin/phpunit --filter testeditOneSort ./test/articleModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:不带limit的获取所有的没被删除的数据     */    public function testgetAllUndeletedWithOutLimit()    {        $record = articleModel::getAllUndeletedWithOutLimit();        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllUndeletedWithOutLimit ./test/articleModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:带limit的获取所有的没被删除的数据     */    public function testgetAllUndeletedWithLimit()    {        $record = articleModel::getAllUndeletedWithLimit("limit 0,1");        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllUndeletedWithLimit ./test/articleModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:不带limit的获取所有的被删除的数据     */    public function testgetAllDeletedWithOutLimit()    {        $record = articleModel::getAllDeletedWithOutLimit();        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllDeletedWithOutLimit ./test/articleModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:带limit的获取所有的被删除的数据     */    public function testgetAllDeletedWithLimit()    {        $record = articleModel::getAllDeletedWithLimit("limit 0,1");        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllDeletedWithLimit ./test/articleModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.26     * @param      * @return     * Function:测试编辑一条记录     */    public function testeditOne()    {        $record = articleModel::getOneById(1);        if(empty($record)){            echo "搜索无数据";            exit;        }        $record = $record[0];        $record->articleCatId = 10;        $record->title = "xxxx";        $record->desc = "xxxx";        $record->indexImg = "xxxx";        $record->content = "xxxx";        $record->addTime = "2019-02-12";        $record->sort = 10;        $record->isDeleted = 10;        $res = $record->editOne();        var_dump($res);        #./vendor/bin/phpunit --filter testeditOne ./test/articleModelTest.php    }}