<?phpuse Models\usersModel;class usersModelTest extends PHPUnit_Framework_TestCase {    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:测试新增一条记录     */    public function testaddOne()    {        $model = new usersModel();        $model->openId = "xxxx";        $model->unionid = "xxxx";        $model->headerImg = "xxxx";        $model->nickname = "xxxx";        $model->username = "xxxx";        $model->sex = 10;        $model->birthday = "xxxx";        $model->mobile = "xxxx";        $model->edu = 10;        $model->email = "xxxx";        $model->graduatedSchoole = "xxxx";        $model->profession = "xxxx";        $model->jianliImgs = "xxxx";        $model->isDeleted = 0;        $model->addTime = "2019-02-12";        $res = $model->addOne();        var_dump($res);        #./vendor/bin/phpunit --filter testaddOne ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:测试删除记录的方法，不进回收站，直接删数据库的记录     */    public function testdeleteOne()    {        $record = usersModel::getOneById(10);        if(empty($record)){            echo "搜索无数据";            exit;        }        $record = $record[0];        $res = $record->deleteOne();        var_dump($res);        #./vendor/bin/phpunit --filter testdeleteOne ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:获取一条不在回收站内的数据     */    public function testgetOneUndeletedByOpenid()    {        $record = usersModel::getOneUndeletedByOpenid(10);        var_dump($record);        #./vendor/bin/phpunit --filter testgetOneUndeletedByOpenid ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:获取一条在回收站内的数据     */    public function testgetOneDeletedByOpenid()    {        $record = usersModel::getOneDeletedByOpenid(10);        var_dump($record);        #./vendor/bin/phpunit --filter testgetOneDeletedByOpenid ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:IN查询， 获取一条不在回收站内的数据     */    public function testgetAllUndeletedByOpenidUseIn()    {        $record = usersModel::getAllUndeletedByOpenidUseIn('1,2,3,4');        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllUndeletedByOpenidUseIn ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:测试不带分页获取所有的不在回收站内的数据     */    public function testgetAllUndeletedByOpenidWithOutLimit()    {        $record = usersModel::getAllUndeletedByOpenidWithOutLimit(10);        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllUndeletedByOpenidWithOutLimit ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:测试带分页获取所有的不在回收站内的数据     */    public function testgetAllUndeletedByOpenidWithLimit()    {        $record = usersModel::getAllUndeletedByOpenidWithLimit(10, "limit 0,1");        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllUndeletedByOpenidWithLimit ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:测试带分页获取所有的不在回收站内的数据     */    public function testgetAllDeletedByOpenidWithOutLimit()    {        $record = usersModel::getAllDeletedByOpenidWithOutLimit(10);        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllDeletedByOpenidWithOutLimit ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:测试带分页获取所有的不在回收站内的数据     */    public function testgetAllDeletedByOpenidWithLimit()    {        $record = usersModel::getAllDeletedByOpenidWithLimit(10, "limit 0,1");        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllDeletedByOpenidWithLimit ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:获取一条不在回收站内的数据     */    public function testgetOneUndeletedByUnionid()    {        $record = usersModel::getOneUndeletedByUnionid(10);        var_dump($record);        #./vendor/bin/phpunit --filter testgetOneUndeletedByUnionid ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:获取一条在回收站内的数据     */    public function testgetOneDeletedByUnionid()    {        $record = usersModel::getOneDeletedByUnionid(10);        var_dump($record);        #./vendor/bin/phpunit --filter testgetOneDeletedByUnionid ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:IN查询， 获取一条不在回收站内的数据     */    public function testgetAllUndeletedByUnionidUseIn()    {        $record = usersModel::getAllUndeletedByUnionidUseIn('1,2,3,4');        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllUndeletedByUnionidUseIn ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:测试不带分页获取所有的不在回收站内的数据     */    public function testgetAllUndeletedByUnionidWithOutLimit()    {        $record = usersModel::getAllUndeletedByUnionidWithOutLimit(10);        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllUndeletedByUnionidWithOutLimit ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:测试带分页获取所有的不在回收站内的数据     */    public function testgetAllUndeletedByUnionidWithLimit()    {        $record = usersModel::getAllUndeletedByUnionidWithLimit(10, "limit 0,1");        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllUndeletedByUnionidWithLimit ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:测试带分页获取所有的不在回收站内的数据     */    public function testgetAllDeletedByUnionidWithOutLimit()    {        $record = usersModel::getAllDeletedByUnionidWithOutLimit(10);        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllDeletedByUnionidWithOutLimit ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:测试带分页获取所有的不在回收站内的数据     */    public function testgetAllDeletedByUnionidWithLimit()    {        $record = usersModel::getAllDeletedByUnionidWithLimit(10, "limit 0,1");        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllDeletedByUnionidWithLimit ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:测试获取一条没被删除的数据     */    public function testgetOneUndeletedByOpenidAndUnionid()    {        $record = usersModel::getOneUndeletedByOpenidAndUnionid(10, 10);        var_dump($record);        #./vendor/bin/phpunit --filter testgetOneUndeletedByOpenidAndUnionid ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:测试获取一条被删除的数据     */    public function testgetOneDeletedByOpenidAndUnionid()    {        $record = usersModel::getOneDeletedByOpenidAndUnionid(10, 10);        var_dump($record);        #./vendor/bin/phpunit --filter testgetOneDeletedByOpenidAndUnionid ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:测试不带limit的获取所有的没被删除的数据     */    public function testgetAllUndeletedByOpenidAndUnionidWithOutLimit()    {        $record = usersModel::getAllUndeletedByOpenidAndUnionidWithOutLimit(10, 10);        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllUndeletedByOpenidAndUnionidWithOutLimit ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:测试不带limit的获取所有的没被删除的数据     */    public function testgetAllDeletedByOpenidAndUnionidWithOutLimit()    {        $record = usersModel::getAllDeletedByOpenidAndUnionidWithOutLimit(10, 10);        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllDeletedByOpenidAndUnionidWithOutLimit ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:测试带limit的获取所有的没被删除的数据     */    public function testgetAllUndeletedByOpenidAndUnionidWithLimit()    {        $record = usersModel::getAllUndeletedByOpenidAndUnionidWithLimit(10, 10, "limit 0,1");        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllUndeletedByOpenidAndUnionidWithLimit ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:测试带limit的获取所有的没被删除的数据     */    public function testgetAllDeletedByOpenidAndUnionidWithLimit()    {        $record = usersModel::getAllDeletedByOpenidAndUnionidWithLimit(10, 10, "limit 0,1");        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllDeletedByOpenidAndUnionidWithLimit ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:根据ID获取一条记录     */    public function testgetOneById()    {        $record = usersModel::getOneById(1);        var_dump($record);        #./vendor/bin/phpunit --filter testgetOneById ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:IN查询，根据ID获取一条记录     */    public function testgetAllUndeletedByIdUseIn()    {        $record = usersModel::getAllUndeletedByIdUseIn('1,2,3,4');        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllUndeletedByIdUseIn ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:根据ID获取一条记录     */    public function testgetOneByIdForUpdate()    {        $record = usersModel::getOneByIdForUpdate(1);        var_dump($record);        #./vendor/bin/phpunit --filter testgetOneByIdForUpdate ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:删除记录的方法，进回收站，不是直接删数据库的记录     */    public function testdeleteUpdateOne()    {        $record = usersModel::getOneById(1);        if(empty($record)){            echo "搜索无数据";            exit;        }        $record = $record[0];        $res= $record->deleteUpdateOne();        var_dump($res);        #./vendor/bin/phpunit --filter testdeleteUpdateOne ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:不带limit的获取所有的没被删除的数据     */    public function testgetAllUndeletedWithOutLimit()    {        $record = usersModel::getAllUndeletedWithOutLimit();        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllUndeletedWithOutLimit ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:带limit的获取所有的没被删除的数据     */    public function testgetAllUndeletedWithLimit()    {        $record = usersModel::getAllUndeletedWithLimit("limit 0,1");        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllUndeletedWithLimit ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:不带limit的获取所有的被删除的数据     */    public function testgetAllDeletedWithOutLimit()    {        $record = usersModel::getAllDeletedWithOutLimit();        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllDeletedWithOutLimit ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:带limit的获取所有的被删除的数据     */    public function testgetAllDeletedWithLimit()    {        $record = usersModel::getAllDeletedWithLimit("limit 0,1");        var_dump($record);        #./vendor/bin/phpunit --filter testgetAllDeletedWithLimit ./test/usersModelTest.php    }    /**     * User: tangwei     * Date: 2019.03.27     * @param      * @return     * Function:测试编辑一条记录     */    public function testeditOne()    {        $record = usersModel::getOneById(1);        if(empty($record)){            echo "搜索无数据";            exit;        }        $record = $record[0];        $record->openId = "xxxx";        $record->unionid = "xxxx";        $record->headerImg = "xxxx";        $record->nickname = "xxxx";        $record->username = "xxxx";        $record->sex = 10;        $record->birthday = "xxxx";        $record->mobile = "xxxx";        $record->edu = 10;        $record->email = "xxxx";        $record->graduatedSchoole = "xxxx";        $record->profession = "xxxx";        $record->jianliImgs = "xxxx";        $record->isDeleted = 10;        $record->addTime = "2019-02-12";        $res = $record->editOne();        var_dump($res);        #./vendor/bin/phpunit --filter testeditOne ./test/usersModelTest.php    }}